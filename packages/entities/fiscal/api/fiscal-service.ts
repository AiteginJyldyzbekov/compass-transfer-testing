'use client';

import {
  FiscalNodeType,
  FiscalStatus,
  type ReceiptType,
  type TaxSystem,
  type VATRate,
  type NSPRate,
  type CalcType,
  type PayType,
} from '../enums/fiscal-enums';
import { FiscalError } from '../interface/fiscal-error';
import type {
  FiscalResponse,
  FiscalState,
  DayState,
  TaxiReceiptData,
  FiscalVersion,
  RegistrationStatus,
} from '../interface/fiscal-types';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å NewCas Fiscal API
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∏ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ localhost NewCas
 */
export class FiscalService {
  private readonly baseUrl: string;
  private readonly registrationNumber?: string;

  constructor(_nodeType: FiscalNodeType = FiscalNodeType.CLOUD, registrationNumber?: string) {
    const port = process.env.NEXT_PUBLIC_FISCAL_PORT || '4445';

    this.baseUrl = `http://localhost:${port}`;
    this.registrationNumber = registrationNumber;
  }

  /**
   * –ë–∞–∑–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–º—É API
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
   */
  private async fiscalRequest<T>(endpoint: string, data: Record<string, any> = {}): Promise<T> {
    const requestBody = {
      ...data,
      ...(this.registrationNumber && { registrationNumber: this.registrationNumber }),
    };

    console.log(`üßæ –§–∏—Å–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å POST ${endpoint}:`, requestBody);

    try {
      const response = await fetch(`${this.baseUrl}${endpoint}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json; charset=utf-8',
        },
        body: JSON.stringify(requestBody),
      });

      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      const fiscalResponse: FiscalResponse<T> = await response.json();
      console.log('üì® –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:', fiscalResponse);
      console.log('üîç –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', fiscalResponse.status);
      console.log('üîç –û–∂–∏–¥–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å SUCCESS:', FiscalStatus.SUCCESS);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
      if (fiscalResponse.status !== FiscalStatus.SUCCESS) {
        console.error('‚ùå –°—Ç–∞—Ç—É—Å –ù–ï SUCCESS:', {
          status: fiscalResponse.status,
          errorMessage: fiscalResponse.errorMessage,
          extCode: fiscalResponse.extCode,
          extCode2: fiscalResponse.extCode2,
        });
        throw new FiscalError(
          fiscalResponse.status,
          fiscalResponse.errorMessage || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏',
          {
            extCode: fiscalResponse.extCode,
            extCode2: fiscalResponse.extCode2,
          },
        );
      }

      console.log(`‚úÖ –§–∏—Å–∫–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ${endpoint}:`, fiscalResponse.data);

      return fiscalResponse.data || ({} as T);
    } catch (error) {
      if (error instanceof FiscalError) {
        throw error;
      }

      console.error(`‚ùå –û—à–∏–±–∫–∞ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ ${endpoint}:`, error);
      throw new FiscalError(
        FiscalStatus.INTERNAL_SERVICE_ERROR,
        `–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ñ–∏—Å–∫–∞–ª—å–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  // ===========================================
  // –ë–ê–ó–û–í–´–ï –ú–ï–¢–û–î–´ –ü–†–û–í–ï–†–ö–ò –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
  // ===========================================

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ –ü–û
   */
  async getVersion(): Promise<FiscalVersion> {
    return this.fiscalRequest<FiscalVersion>('/GetVersion');
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –§–ù
   */
  async getRegistrationStatus(): Promise<RegistrationStatus> {
    return this.fiscalRequest<RegistrationStatus>('/GetRegistrationStatus');
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –§–ù
   */
  async getState(): Promise<FiscalState> {
    return this.fiscalRequest<FiscalState>('/fiscal/shifts/getState/');
  }

  /**
   * –°–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –§–ù
   */
  async selfTest(): Promise<void> {
    await this.fiscalRequest<void>('/SelfTest');
  }

  // ===========================================
  // –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–ß–ï–ô –°–ú–ï–ù–û–ô
  // ===========================================

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
   */
  async getDayState(): Promise<DayState> {
    return this.fiscalRequest<DayState>('/GetDayState');
  }

  /**
   * –û—Ç–∫—Ä—ã—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
   */
  async openDay(cashierName: string = '–¢–µ—Ä–º–∏–Ω–∞–ª'): Promise<void> {
    console.log('üìÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å...');
    await this.fiscalRequest<void>('/fiscal/shifts/openDay/', {
      cashierName,
      ignoreOpenShift: true, // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ—Å–ª–∏ —Å–º–µ–Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞
    });
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
   */
  async closeDay(cashierName: string = '–¢–µ—Ä–º–∏–Ω–∞–ª'): Promise<void> {
    console.log('üìÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å...');
    await this.fiscalRequest<void>('/fiscal/shifts/closeDay/', {
      cashierName,
      printToBitmaps: false, // –Ω–µ –Ω—É–∂–Ω—ã –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É
    });
  }

  /**
   * –ü–µ—á–∞—Ç—å X-–æ—Ç—á–µ—Ç–∞ (–±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–º–µ–Ω—ã)
   */
  async printXReport(): Promise<void> {
    console.log('üìä –ü–µ—á–∞—Ç–∞–µ–º X-–æ—Ç—á–µ—Ç...');
    await this.fiscalRequest<void>('/PrintXReport');
  }

  // ===========================================
  // –°–û–ó–î–ê–ù–ò–ï –ß–ï–ö–û–í (–û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨)
  // ===========================================

  /**
   * –û—Ç–∫—Ä—ã—Ç—å —á–µ–∫
   */
  async openReceipt(recType: ReceiptType, taxSystem?: TaxSystem): Promise<void> {
    console.log('üßæ –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–µ–∫...', { recType, taxSystem });
    await this.fiscalRequest<void>('/OpenRec', { recType, taxSystem });
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä/—É—Å–ª—É–≥—É –≤ —á–µ–∫
   */
  async printReceiptItem(itemData: {
    name: string;
    price: number;
    quantity: number;
    vatNum: VATRate;
    stNum: NSPRate;
    calcType: CalcType;
    payType: PayType;
    department?: number;
    barcode?: string;
  }): Promise<void> {
    console.log('üõí –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ —á–µ–∫...', itemData);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ü–µ–Ω—ã (–Ω–µ –±–æ–ª–µ–µ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
    const roundedPrice = Math.round(itemData.price * 100) / 100;

    await this.fiscalRequest<void>('/PrintRecItem', {
      name: itemData.name,
      price: roundedPrice,
      quantity: itemData.quantity,
      vatNum: itemData.vatNum,
      stNum: itemData.stNum,
      calcType: itemData.calcType,
      payType: itemData.payType,
      ...(itemData.department && { department: itemData.department }),
      ...(itemData.barcode && { barcode: itemData.barcode }),
    });
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ç–æ–≥ —á–µ–∫–∞
   */
  async printReceiptTotal(total: number, paymentType?: string): Promise<void> {
    console.log('üí∞ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ç–æ–≥ —á–µ–∫–∞...', { total, paymentType });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—É–º–º—ã
    const roundedTotal = Math.round(total * 100) / 100;

    await this.fiscalRequest<void>('/PrintRecTotal', {
      total: roundedTotal,
      ...(paymentType && { paymentType }),
    });
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç—å —á–µ–∫
   */
  async closeReceipt(): Promise<void> {
    console.log('‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —á–µ–∫...');
    await this.fiscalRequest<void>('/CloseRec', {});
  }

  /**
   * –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–µ–∫
   */
  async voidReceipt(): Promise<void> {
    console.log('‚ùå –ê–Ω–Ω—É–ª–∏—Ä—É–µ–º —á–µ–∫...');
    await this.fiscalRequest<void>('/fiscal/bills/recVoid/', {});
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å —á–µ–∫ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π openAndCloseRec (–ø—Ä–∏—Ö–æ–¥)
   */
  async openAndCloseRec(payload: unknown): Promise<void> {
    console.log('üßæ –í—ã–∑—ã–≤–∞–µ–º openAndCloseRec —Å payload:', JSON.stringify(payload, null, 2));

    const result = await this.fiscalRequest<any>('/fiscal/bills/openAndCloseRec/', payload as any);

    console.log('‚úÖ openAndCloseRec –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);

    return result;
  }

  /**
   * –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—ë–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ NewCas: ExecutePayment
   */
  async executePayment(
    amount: number,
    type = '',
  ): Promise<{
    result: string;
    id: string;
    status: 'Pending' | 'Success' | 'Failed';
    reason?: string;
  }> {
    // API —Ç—Ä–µ–±—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—É–º–º—ã
    const body = {
      type,
      amount: amount.toString(),
    };

    console.log('üí≥ –í—ã–∑—ã–≤–∞–µ–º executePayment —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', body);

    try {
      // executePayment –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É FiscalResponse
      // –ø–æ—ç—Ç–æ–º—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ
      const response = await fetch(`${this.baseUrl}/fiscal/payments/executePayment/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json; charset=utf-8',
        },
        body: JSON.stringify(body),
      });

      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      const rawResult = await response.json();

      console.log('üí≥ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç executePayment:', rawResult);

      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ undefined, —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º
      if (!rawResult || rawResult === null) {
        console.log('üí≥ –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç, —Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω—ã–º');

        return {
          result: 'success',
          id: `pos_payment_${Date.now()}`,
          status: 'Success',
          reason: undefined,
        };
      }

      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ status –≤ –∫–æ—Ä–Ω–µ (–Ω–µ –≤ data), –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
      if (rawResult.status !== undefined) {
        return {
          result: rawResult.result || 'success',
          id: rawResult.id || `pos_payment_${Date.now()}`,
          status: rawResult.status === 0 ? 'Success' : 'Failed',
          reason: rawResult.reason || rawResult.errorMessage,
        };
      }

      // –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
      return rawResult;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ executePayment:', error);
      throw new FiscalError(
        FiscalStatus.INTERNAL_SERVICE_ERROR,
        `–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  // ===========================================
  // –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –¢–ê–ö–°–ò
  // ===========================================

  /**
   * –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω—ã–π —á–µ–∫ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ —Ç–∞–∫—Å–∏
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async createTaxiReceipt(data: TaxiReceiptData): Promise<void> {
    console.log('üöï –°–æ–∑–¥–∞–µ–º —á–µ–∫ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ —Ç–∞–∫—Å–∏:', data);

    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –§–ù
      const state = await this.getState();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ (status === 0)
      // –í —Ä–µ–∞–ª—å–Ω–æ–º API –Ω–µ—Ç –ø–æ–ª–µ–π isReady –∏ isRegistered
      if (state.status !== undefined && state.status !== 0) {
        throw new FiscalError(
          FiscalStatus.FISCAL_CORE_ERROR,
          `–§–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: status=${state.status}`,
        );
      }

      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É —á–µ—Ä–µ–∑ dayState –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
      // dayState: 0 = –∑–∞–∫—Ä—ã—Ç–∞, 1 = –æ—Ç–∫—Ä—ã—Ç–∞
      if (state.dayState === 0) {
        console.log('üìÖ –°–º–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é...');
        await this.openDay();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è
        const newState = await this.getState();

        if (newState.dayState !== 1) {
          throw new FiscalError(FiscalStatus.FISCAL_CORE_ERROR, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ä–∞–±–æ—á—É—é —Å–º–µ–Ω—É');
        }
      } else if (state.dayState === 1) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ —Å–º–µ–Ω–∞ (24 —á–∞—Å–∞)
        if (state.isShiftExpired) {
          console.log('‚è∞ –°–º–µ–Ω–∞ –∏—Å—Ç–µ–∫–ª–∞ (–±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤), –∑–∞–∫—Ä—ã–≤–∞–µ–º –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é...');

          // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ä—É—é —Å–º–µ–Ω—É
          await this.closeDay();

          // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å–º–µ–Ω—É
          await this.openDay();

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
          const newState = await this.getState();

          if (newState.dayState !== 1 || newState.isShiftExpired) {
            throw new FiscalError(FiscalStatus.FISCAL_CORE_ERROR, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É');
          }

          console.log('‚úÖ –°–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç–∞');
        } else {
          console.log('‚úÖ –°–º–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
        }
      } else {
        console.warn('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã:', state.dayState);
      }

      // 3. –°–æ–∑–¥–∞—ë–º —á–µ–∫ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
      // –í–ê–ñ–ù–û: API —Ç—Ä–µ–±—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—É–º–º
      const roundedPrice = Math.round(data.price * 100) / 100;

      const receiptPayload = {
        recType: 1, // –ø—Ä–∏—Ö–æ–¥
        goods: [
          {
            itemName: `–ü–æ–µ–∑–¥–∫–∞: ${data.route}`,
            total: roundedPrice.toString(),
            vatNum: 0,
            price: roundedPrice.toString(),
            count: 1, // –≤ –ø—Ä–∏–º–µ—Ä–µ —á–∏—Å–ª–æ, –Ω–µ —Å—Ç—Ä–æ–∫–∞
            calcType: 1, // 1 = —É—Å–ª—É–≥–∞ (–¥–ª—è —Ç–∞–∫—Å–∏)
            article: '',
            stNum: 0,
            // payType —É–±—Ä–∞–Ω - –æ–Ω –µ—Å—Ç—å –≤ payItems
          },
        ],
        payItems: [
          {
            total: roundedPrice.toString(), // API —Ç—Ä–µ–±—É–µ—Ç —Å—Ç—Ä–æ–∫—É
            payType: 1, // 1 ‚Äì –±–µ–∑–Ω–∞–ª
            // –î–ª—è –ø—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ (–∫–∞—Ä—Ç–∞ —á–µ—Ä–µ–∑ POS, QR) –ø–ª–∞—Ç–µ–∂ —É–∂–µ –ø—Ä–æ–≤–µ–¥–µ–Ω
            ...((data.paymentMethod === 'CARD' || data.paymentMethod === 'QR') && { paid: true }),
          },
        ],
      };

      console.log(
        'üìÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ–∫–∞ –Ω–∞ openAndCloseRec:',
        JSON.stringify(receiptPayload, null, 2),
      );

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ goods[0]:', receiptPayload.goods[0]);
      console.log('üîç –¢–∏–ø article:', typeof receiptPayload.goods[0].article);

      await this.openAndCloseRec(receiptPayload);

      console.log('‚úÖ –ß–µ–∫ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ —Ç–∞–∫—Å–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞ –¥–ª—è —Ç–∞–∫—Å–∏:', error);

      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
      if (error instanceof FiscalError) {
        console.error('–î–µ—Ç–∞–ª–∏ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏:', {
          status: error.status,
          message: error.message,
          extCode: error.details?.extCode,
          extCode2: error.details?.extCode2,
        });

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–º–µ–Ω—ã
        if (error.message && error.message.includes('–°–º–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 24 —á–∞—Å–∞')) {
          console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∏—Å—Ç–µ–∫—à–∞—è —Å–º–µ–Ω–∞, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å...');

          try {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ä—É—é —Å–º–µ–Ω—É
            await this.closeDay();
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é
            await this.openDay();

            console.log('‚úÖ –°–º–µ–Ω–∞ –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç–∞, –ø–æ–≤—Ç–æ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞...');

            // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Å–µ–±—è –∂–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
            return await this.createTaxiReceipt(data);
          } catch (reopenError) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É:', reopenError);
            throw new FiscalError(
              FiscalStatus.FISCAL_CORE_ERROR,
              '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞',
            );
          }
        }
      }

      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ - –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å
      if (error instanceof FiscalError && error.isPrintError) {
        console.warn('‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –æ—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—á–∞—Ç—å –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è.');
        throw error;
      }

      // –ù–ï –ê–ù–ù–£–õ–ò–†–£–ï–ú –ß–ï–ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò!
      // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –∞ –Ω–µ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º —á–µ–∫–æ–º
      console.warn('‚ö†Ô∏è –ù–µ –∞–Ω–Ω—É–ª–∏—Ä—É–µ–º —á–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω.');

      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –§–ù –∫ —Ä–∞–±–æ—Ç–µ
   */
  async checkReadiness(): Promise<{
    isReady: boolean;
    issues: string[];
  }> {
    const issues: string[] = [];

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      const state = await this.getState();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å (0 = —É—Å–ø–µ—Ö)
      if (state.status !== 0) {
        issues.push(
          `–§–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${state.errorMessage || `status=${state.status}`}`,
        );
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
      if (!state.registrationNumber) {
        issues.push('–§–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ —Å–º–µ–Ω–∞
      if (state.isShiftExpired) {
        issues.push('–°–º–µ–Ω–∞ –∏—Å—Ç–µ–∫–ª–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–∫—Ä—ã—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—É—é');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—É (dayState: 1 = –æ—Ç–∫—Ä—ã—Ç–∞)
      if (state.dayState !== 1) {
        issues.push('–†–∞–±–æ—á–∞—è —Å–º–µ–Ω–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞');
      }

      return {
        isReady: issues.length === 0,
        issues,
      };
    } catch (error) {
      issues.push(
        `–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –§–ù: ${error instanceof Error ? error.message : String(error)}`,
      );

      return {
        isReady: false,
        issues,
      };
    }
  }

  /**
   * –ü–µ—á–∞—Ç—å —Ä–∞—Å—Ç—Ä–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param rasterBase64 - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Base64, –Ω–µ –±–æ–ª–µ–µ 384 –ø–∏–∫—Å–µ–ª–µ–π –≤ —à–∏—Ä–∏–Ω—É
   */
  async printRaster(rasterBase64: string): Promise<void> {
    console.log('üñ®Ô∏è –ü–µ—á–∞—Ç–∞–µ–º —Ä–∞—Å—Ç—Ä–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');

    try {
      await this.fiscalRequest<void>('/fiscal/bills/printRaster/', {
        raster: rasterBase64,
      });

      console.log('‚úÖ –†–∞—Å—Ç—Ä–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —Ä–∞—Å—Ç—Ä–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      throw new FiscalError(
        FiscalStatus.PRINTER_ERROR,
        `–û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —Ä–∞—Å—Ç—Ä–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  /**
   * –ü–µ—á–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–µ–∫–µ
   * @param line - —Ç–µ–∫—Å—Ç —Å—Ç—Ä–æ–∫–∏
   * @param align - –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ (0-–ª–µ–≤–æ, 1-—Ü–µ–Ω—Ç—Ä, 2-–ø—Ä–∞–≤–æ)
   */
  async printLine(line: string, align: number = 0): Promise<void> {
    try {
      await this.fiscalRequest<void>('/fiscal/bills/printLine/', {
        line,
        align,
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —Å—Ç—Ä–æ–∫–∏:', error);
      throw new FiscalError(
        FiscalStatus.PRINTER_ERROR,
        `–û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —Å—Ç—Ä–æ–∫–∏: ${error instanceof Error ? error.message : String(error)}`,
      );
    }
  }

  /**
   * –ü–µ—á–∞—Ç—å —á–µ–∫–∞ —Ç–∞–∫—Å–∏ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
   * @param data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—á–∞—Ç–∏ —á–µ–∫–∞
   */
  async printTaxiReceiptLines(data: {
    price: number;
    route: string;
    paymentMethod: string;
    orderNumber: string;
    driver?: {
      fullName: string;
      phoneNumber?: string;
    };
    car?: {
      make: string;
      model: string;
      licensePlate: string;
      color: string;
    };
    queueNumber?: string;
  }): Promise<void> {
    console.log('üî®Ô∏è –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —á–µ–∫ –¥–ª—è –ø–æ—Å—Ç—Ä–æ—á–Ω–æ–π –ø–µ—á–∞—Ç–∏:', data);

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    const date = new Date();
    const formattedDate = date.toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: '2-digit'
    });
    const formattedTime = date.toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit'
    });

    // –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø–µ—á–∞—Ç–∏
    const lines: string[] = [];
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    lines.push('');
    lines.push('===============================');
    lines.push('      –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –£–°–ü–ï–®–ù–ê');
    lines.push('===============================');
    lines.push('');
    
    // –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
    lines.push(`–î–∞—Ç–∞:                    ${formattedDate} ${formattedTime}`);
    lines.push(`–ú–∞—Ä—à—Ä—É—Ç:                 ${data.route}`);
    lines.push(`–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:            ${data.orderNumber}`);
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ
    if (data.car) {
      lines.push('');
      lines.push('--- –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–ê–®–ò–ù–ï ---');
      lines.push(`–ì–æ—Å. –Ω–æ–º–µ—Ä:              ${data.car.licensePlate}`);
      lines.push(`–ú–∞—Ä–∫–∞:                   ${data.car.make}`);
      lines.push(`–ú–æ–¥–µ–ª—å:                  ${data.car.model}`);
      if (data.car.color) {
        lines.push(`–¶–≤–µ—Ç:                    ${data.car.color}`);
      }
    }
    
    if (data.queueNumber) {
      lines.push(`–ù–æ–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏:           ${data.queueNumber}`);
    }
    
    // –í–æ–¥–∏—Ç–µ–ª—å
    if (data.driver) {
      lines.push(`–í–æ–¥–∏—Ç–µ–ª—å:                ${data.driver.fullName}`);
      if (data.driver.phoneNumber) {
        lines.push(`–¢–µ–ª–µ—Ñ–æ–Ω:                 ${data.driver.phoneNumber}`);
      }
    }
    
    // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
    lines.push('');
    lines.push('===============================');
    lines.push('');
    lines.push('    –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ');
    lines.push('        —Å–µ—Ä–≤–∏—Å–∞ Compass');
    lines.push('');
    lines.push('-------------------------------');
    lines.push('');

    try {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—á–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —á–µ–∫–∞ –û–î–ù–ò–ú –∑–∞–ø—Ä–æ—Å–æ–º');
      console.log('üìÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏:', lines);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –û–î–ù–ò–ú –∑–∞–ø—Ä–æ—Å–æ–º
      const textContent = lines.join('\n');
      console.log('üìù –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', textContent);
      
      const result = await this.fiscalRequest<void>('/fiscal/bills/printText/', {
        text: textContent,
        cutPaper: true // –û—Ç—Ä–µ–∑–∞—Ç—å –±—É–º–∞–≥—É –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏
      });
      
      console.log('‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —á–µ–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω –û–î–ù–ò–ú –∑–∞–ø—Ä–æ—Å–æ–º');
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
      
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —á–µ–∫–∞:', error);
      console.error('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
        message: error instanceof Error ? error.message : String(error),
        stack: error instanceof Error ? error.stack : undefined,
        name: error instanceof Error ? error.name : undefined
      });
      throw error;
    }
  }


}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export const fiscalService = new FiscalService();
