'use client';

import { useEffect } from 'react';
import { useMap } from 'react-leaflet';

interface MapControllerProps {
  center?: { latitude: number; longitude: number } | null;
  zoom?: number;
  openPopupDriverId?: string | null;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ–π
 */
export const MapController: React.FC<MapControllerProps> = ({ center, zoom = 16, openPopupDriverId }) => {
  const map = useMap();

  useEffect(() => {
    if (center) {
      // –ü–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞—Ä—Ç—É –∫ –Ω–æ–≤–æ–º—É —Ü–µ–Ω—Ç—Ä—É
      map.setView([center.latitude, center.longitude], zoom, {
        animate: true,
        duration: 1.0 // 1 —Å–µ–∫—É–Ω–¥–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
      });
    }
  }, [center, zoom, map]);

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º popup –≤–æ–¥–∏—Ç–µ–ª—è
  useEffect(() => {
    if (openPopupDriverId) {
      // eslint-disable-next-line no-console
      console.log('üîç MapController: –ò—â–µ–º –º–∞—Ä–∫–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è', { openPopupDriverId });

      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ü–µ–Ω—Ç—Ä (–∫–∞—Ä—Ç–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è), –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
      const delay = center ? 1100 : 100; // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è, –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ä–∞–∑—É

      const timer = setTimeout(() => {
        let found = false;
        // –ò—â–µ–º –º–∞—Ä–∫–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è –ø–æ ID –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ popup
        map.eachLayer((layer: any) => {
          if (layer.options && layer.options.driverId === openPopupDriverId) {
            // eslint-disable-next-line no-console
            console.log('‚úÖ MapController: –ù–∞–π–¥–µ–Ω –º–∞—Ä–∫–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è, –æ—Ç–∫—Ä—ã–≤–∞–µ–º popup', { driverId: openPopupDriverId });
            layer.openPopup();
            found = true;
          }
        });

        if (!found) {
          // eslint-disable-next-line no-console
          console.log('‚ùå MapController: –ú–∞—Ä–∫–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω', { openPopupDriverId });
        }
      }, delay);

      return () => clearTimeout(timer);
    }
  }, [openPopupDriverId, center, map]);

  return null;
};
