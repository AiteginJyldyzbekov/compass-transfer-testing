'use client';

import { useIncomingOrder } from '../context/incoming-order-context';
import type { GetOrderDTO } from '@entities/orders/interface/GetOrderDTO';

export function TestOrderButton() {
  const { showOrder } = useIncomingOrder();

  const handleTestOrder = () => {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const testOrder: GetOrderDTO = {
      id: 'test-order-123',
      orderNumber: '12345',
      type: 'Instant',
      status: 'Searching',
      createdAt: new Date().toISOString(),
      scheduledTime: null,
      customerId: 'customer-123',
      creatorId: 'creator-123',
      services: [],
      // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è
    } as GetOrderDTO;

    showOrder(testOrder);
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ
  if (process.env.NODE_ENV !== 'development') {
    return null;
  }

  return (
    <button
      onClick={handleTestOrder}
      className='fixed bottom-20 right-4 z-50 bg-red-600 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-red-700 text-sm font-medium'
    >
      üß™ –¢–µ—Å—Ç –∑–∞–∫–∞–∑–∞
    </button>
  );
}
