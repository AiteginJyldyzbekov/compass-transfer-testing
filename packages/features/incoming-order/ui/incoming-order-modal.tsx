'use client';

import { useState, useEffect, useCallback } from 'react';
import { toast } from 'sonner';
import { driverOrderApi } from '@shared/api/orders';
import type { SignalREventData } from '@shared/hooks/signal/types';
import { useSignalR } from '@shared/hooks/signal/useSignalR';
import { Button } from '@shared/ui/forms/button';
import { OrderStatus } from '@entities/orders/enums';
import type { GetOrderDTO } from '@entities/orders/interface/GetOrderDTO';
import { useDriverQueue } from '@features/driver-queue';
import { useNotificationSound } from '@features/notifications';

interface IncomingOrderModalProps {
  onOrderAccepted?: () => void; // Callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dashboard
}

export function IncomingOrderModal({ onOrderAccepted }: IncomingOrderModalProps = {}) {
  // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [currentOrderId, setCurrentOrderId] = useState<string | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isAccepting, setIsAccepting] = useState(false);
  const [currentOrder, setCurrentOrder] = useState<GetOrderDTO | null>(null);
  const [timeLeft, setTimeLeft] = useState(30); // –¢–∞–π–º–µ—Ä –Ω–∞ 30 —Å–µ–∫—É–Ω–¥

  // –•—É–∫–∏
  const { on, off } = useSignalR();
  const { playSound, stopSound } = useNotificationSound();
  const { leaveQueue } = useDriverQueue();

  // SignalR —Å–ª—É—à–∞—Ç–µ–ª—å –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤
  useEffect(() => {
    const handleRideRequest = (notification: SignalREventData) => {
      console.log('üö® –ü–û–õ–£–ß–ï–ù –ó–ê–ö–ê–ó:', notification);

      if (notification && typeof notification === 'object' && 'data' in notification && notification.data && 'orderId' in notification && notification.orderId) {
        // ID –∑–∞–∫–∞–∑–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ notification.orderId, –∞ –¥–∞–Ω–Ω—ã–µ –≤ notification.data!
        const signalRData = notification.data as { waypoints: any[] };
        const orderId = notification.orderId as string;
        const orderType = (notification as any).orderType as string;
        const title = (notification as any).title as string;

        console.log('üö® –î–ê–ù–ù–´–ï –ó–ê–ö–ê–ó–ê –ò–ó SIGNALR:', signalRData);
        console.log('üö® ORDER ID –ò–ó NOTIFICATION:', orderId);
        console.log('üö® ORDER TYPE:', orderType);
        console.log('üö® TITLE:', title);

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const waypoints = signalRData.waypoints || [];
        const startLocation = waypoints[0]?.location;
        const endLocation = waypoints[1]?.location;

        const mappedOrderData = {
          id: orderId,
          orderNumber: orderId.slice(-8), // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ ID –∫–∞–∫ –Ω–æ–º–µ—Ä
          startLocationId: startLocation?.address || startLocation?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
          endLocationId: endLocation?.address || endLocation?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
          startLocationAddress: startLocation?.address || '',
          endLocationAddress: endLocation?.address || '',
          type: orderType === 'Instant' ? 'Instant' : 'Scheduled',
          status: OrderStatus.Pending,
          additionalStops: waypoints.slice(2)?.map((wp: { location: any }) => wp.location) || [],
          // –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –ø–æ–ª—è —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
          customerId: '',
          driverId: null,
          createdAt: new Date().toISOString(),
          updatedAt: new Date().toISOString(),
          scheduledTime: null,
          description: null,
          airFlight: null,
          flyReis: null,
          notes: null,
          totalPrice: 0,
          currency: 'KGS',
          creatorId: '',
          initialPrice: 0,
          services: [],
          passengers: []
        } as unknown as GetOrderDTO;

        console.log('üö® –ú–ê–ü–ü–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï:', mappedOrderData);

        setCurrentOrder(mappedOrderData);
        setCurrentOrderId(orderId);
        setIsModalOpen(true);
        setTimeLeft(30); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
        playSound();

        console.log('üö® currentOrder —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', mappedOrderData);
        console.log('üö® currentOrderId —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', orderId);
        console.log('üö® isModalOpen —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', true);

        // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => { }, 100);
      } else {
        console.log('üö® –ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:', notification);
      }
    };

    on('RideRequestNotification', handleRideRequest);

    return () => {
      off('RideRequestNotification', handleRideRequest);
      stopSound();
    };
  }, [on, off, playSound, stopSound]);

  // –î–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å –≤ SignalR
  // –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞
  const handleAccept = async () => {
    if (!currentOrderId) return;

    try {
      setIsAccepting(true);
      console.log('üö® –ü–†–ò–ù–ò–ú–ê–Æ –ó–ê–ö–ê–ó:', currentOrderId);

      stopSound();
      await driverOrderApi.acceptInstantOrder(currentOrderId)
        .then(() => leaveQueue())

      toast.success('‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!');

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      setIsModalOpen(false);
      setCurrentOrderId(null);
      setCurrentOrder(null);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è dashboard
      window.dispatchEvent(new CustomEvent('orderAccepted'));

      // –¢–∞–∫–∂–µ –≤—ã–∑—ã–≤–∞–µ–º callback –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
      if (onOrderAccepted) {
        setTimeout(() => {
          onOrderAccepted();
        }, 500);
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞:', error);
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞');
    } finally {
      setIsAccepting(false);
    }
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleClose = useCallback(async () => {
    console.log('üö® –ó–ê–ö–†–´–í–ê–Æ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û');
    setIsModalOpen(false);
    setCurrentOrderId(null);
    setCurrentOrder(null);
    stopSound();

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    try {
      await leaveQueue();
      console.log('üö® –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –í–´–®–õ–ò –ò–ó –û–ß–ï–†–ï–î–ò');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏:', error);
    }
  }, [stopSound, leaveQueue]);

  // –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    let interval: NodeJS.Timeout;

    if (isModalOpen && timeLeft > 0) {
      interval = setInterval(() => {
        setTimeLeft((prev) => {
          if (prev <= 1) {
            // –í—Ä–µ–º—è –≤—ã—à–ª–æ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            handleClose();

            return 0;
          }

          return prev - 1;
        });
      }, 1000);
    }

    return () => {
      if (interval) {
        clearInterval(interval);
      }
    };
  }, [isModalOpen, timeLeft, handleClose]);

  // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  console.log('üö® –†–ï–ù–î–ï–† –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê:');
  console.log('üö® isModalOpen:', isModalOpen);
  console.log('üö® currentOrderId:', currentOrderId);
  console.log('üö® currentOrder:', currentOrder);

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –æ–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
  if (!isModalOpen || !currentOrderId || !currentOrder) {
    return null;
  }

  console.log('üö® –í–°–ï –£–°–õ–û–í–ò–Ø –í–´–ü–û–õ–ù–ï–ù–´, –ü–û–ö–ê–ó–´–í–ê–Æ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û!');

  return (
    <div className='fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-4'>
      <div className='w-full max-w-md bg-white rounded-2xl shadow-xl overflow-hidden animate-in zoom-in-95 duration-200'>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className='bg-blue-600 text-white p-4 text-center'>
          <h2 className='text-lg font-bold'>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</h2>
          <p className='text-blue-100 text-sm'>–ó–∞–∫–∞–∑ #{currentOrder.orderNumber}</p>
          <div className='mt-2 flex items-center justify-center gap-2'>
            <div className='w-2 h-2 bg-red-500 rounded-full animate-pulse' />
            <p className='text-blue-100 text-sm font-medium'>
              –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ {timeLeft} —Å–µ–∫
            </p>
          </div>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className='p-4 space-y-4'>
          {/* –ú–∞—Ä—à—Ä—É—Ç */}
          <div className='space-y-3'>
            <div className='flex items-start space-x-3'>
              <div className='w-3 h-3 rounded-full bg-green-500 mt-1 flex-shrink-0' />
              <div className='flex-1'>
                <p className='text-sm text-gray-500'>–û—Ç–∫—É–¥–∞</p>
                <p className='font-medium text-gray-900'>
                  {currentOrder.startLocationId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                </p>
              </div>
            </div>

            <div className='flex items-start space-x-3'>
              <div className='w-3 h-3 rounded-full bg-red-500 mt-1 flex-shrink-0' />
              <div className='flex-1'>
                <p className='text-sm text-gray-500'>–ö—É–¥–∞</p>
                <p className='font-medium text-gray-900'>
                  {currentOrder.endLocationId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                </p>
              </div>
            </div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className='grid grid-cols-2 gap-4 pt-2 border-t'>
            <div>
              <p className='text-sm text-gray-500'>–¢–∏–ø –∑–∞–∫–∞–∑–∞</p>
              <p className='font-medium'>{currentOrder.type === 'Instant' ? '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π' : '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'}</p>
            </div>
            <div>
              <p className='text-sm text-gray-500'>–°—Ç–∞—Ç—É—Å</p>
              <p className='font-medium'>
                {currentOrder.status === OrderStatus.Pending ? '–ü–æ–∏—Å–∫ –≤–æ–¥–∏—Ç–µ–ª—è' : currentOrder.status}
              </p>
            </div>
          </div>

          {/* –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏ */}
          {currentOrder.additionalStops && currentOrder.additionalStops.length > 0 && (
            <div className='pt-2 border-t'>
              <p className='text-sm text-gray-500 mb-2'>–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:</p>
              <div className='space-y-1'>
                {currentOrder.additionalStops.map((stopId: string, _index: number) => (
                  <div key={stopId} className='flex items-center space-x-2'>
                    <div className='w-2 h-2 rounded-full bg-yellow-500' />
                    <p className='text-sm text-gray-700'>
                      –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {stopId}
                    </p>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className='p-4 bg-gray-50'>
          <div className='flex gap-3'>
            <Button
              onClick={handleClose}
              variant='outline'
              className='flex-1 py-3 rounded-xl'
            >
              –û—Ç–∫–ª–æ–Ω–∏—Ç—å
            </Button>
            <Button
              onClick={handleAccept}
              disabled={isAccepting}
              className='flex-1 bg-green-600 hover:bg-green-700 text-white font-semibold py-3 rounded-xl transition-colors'
            >
              {isAccepting ? '–ü—Ä–∏–Ω–∏–º–∞—é...' : '–ü—Ä–∏–Ω—è—Ç—å'}
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
