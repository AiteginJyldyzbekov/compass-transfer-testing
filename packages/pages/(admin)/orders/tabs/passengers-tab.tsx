'use client';

import { Users, Plus, Trash2, User, Phone, Mail, Search, UserCheck, MapPin, ExternalLink } from 'lucide-react';
import { Badge } from '@shared/ui/data-display/badge';
import { Button } from '@shared/ui/forms/button';
import { Input } from '@shared/ui/forms/input';
import { Card, CardContent, CardHeader, CardTitle } from '@shared/ui/layout/card';
import type { GetTariffDTO } from '@entities/tariffs/interface';
import type { GetCustomerDTO, GetPartnerDTO } from '@entities/users/interface';
import { usePassengersManagement, type EnhancedPassenger } from '@features/users/hooks/use-passengers-management';

// Union —Ç–∏–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–æ–∏—Å–∫–µ (Customer –∏–ª–∏ Partner)
type SearchableUser = GetCustomerDTO | GetPartnerDTO;

interface PassengersTabProps {
  users: SearchableUser[];
  passengers?: EnhancedPassenger[];
  handlePassengersChange?: (passengers: EnhancedPassenger[]) => void;
  selectedTariff?: GetTariffDTO; // –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  isInstantOrder?: boolean; // –§–ª–∞–≥ –¥–ª—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
  onValidationError?: () => void; // –ö–æ–ª–±—ç–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  userRole?: 'admin' | 'operator' | 'partner' | 'driver'; // –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  [key: string]: unknown;
}

export function PassengersTab({ users, passengers: initialPassengers, handlePassengersChange, selectedTariff, isInstantOrder = false, onValidationError: _onValidationError, userRole = 'operator' }: PassengersTabProps) {
  const {
    passengers,
    selectedCustomer,
    isLoadingPassengerData,
    passengersDataLoaded,
    searchQuery,
    isSearching,
    filteredUsers,
    maxPassengers,
    canAddMorePassengers,
    addPassenger,
    removePassenger,
    updatePassenger,
    setMainPassenger,
    fillFromCustomer,
    setSearchQuery,
    setSelectedCustomer,
    getCarTypeLabel,
    handleViewUserProfile,
  } = usePassengersManagement({
    users,
    initialPassengers,
    selectedTariff,
    isInstantOrder,
    userRole,
    onPassengersChange: handlePassengersChange,
    onValidationError: _onValidationError,
  });



  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  if (isLoadingPassengerData || !passengersDataLoaded) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4" />
          <p className="text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤...</p>
        </div>
      </div>
    );
  }

  return (
    <div className={`flex flex-col gap-6 max-h-screen ${userRole !== 'partner' ? 'lg:flex-row' : ''}`}>
      {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ü—Ä–æ—Ñ–∏–ª—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ */}
      <div className={`w-full flex-shrink-0 ${userRole !== 'partner' ? 'lg:flex-1 lg:sticky lg:top-0 lg:self-start' : ''}`}>
        <Card className='h-full'>
          <CardHeader>
            <CardTitle className='flex items-center gap-2'>
              <UserCheck className='h-5 w-5' />
              {selectedCustomer?.role === 'Partner' ? '–ü—Ä–æ—Ñ–∏–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞' : '–ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞'}
            </CardTitle>
          </CardHeader>
          <CardContent>
            {selectedCustomer ? (
              <div className='space-y-6'>
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
                <div className='text-center'>
                  <div className='w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4'>
                    <User className='h-10 w-10 text-blue-600' />
                  </div>
                  <h3 className='text-xl font-semibold text-gray-900'>
                    {selectedCustomer.fullName}
                  </h3>
                  <div className='flex items-center justify-center gap-2 mt-2'>
                    <Badge variant={selectedCustomer.role === 'Partner' ? 'default' : 'secondary'}>
                      {selectedCustomer.role === 'Partner' ? '–ö–æ–Ω—Ç—Ä-–∞–≥–µ–Ω—Ç' : '–ö–ª–∏–µ–Ω—Ç'}
                    </Badge>
                    <Badge variant='outline'>–û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Å—Å–∞–∂–∏—Ä</Badge>
                  </div>
                </div>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ */}
                {selectedCustomer.role === 'Partner' && 'profile' in selectedCustomer && selectedCustomer.profile && (
                  <div className='space-y-4'>
                    <h4 className='font-medium text-gray-900'>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏</h4>
                    <div className='flex items-center gap-3 p-3 bg-gray-50 rounded-lg'>
                      <div className='w-8 h-8 bg-blue-100 rounded flex items-center justify-center'>
                        <span className='text-blue-600 font-medium text-sm'>üè¢</span>
                      </div>
                      <div>
                        <p className='text-sm text-gray-500'>–ö–æ–º–ø–∞–Ω–∏—è</p>
                        <p className='font-medium'>{(selectedCustomer as GetPartnerDTO).profile.companyName}</p>
                        <p className='text-xs text-gray-400'>
                          {(selectedCustomer as GetPartnerDTO).profile.companyType}
                        </p>
                      </div>
                    </div>
                    {(selectedCustomer as GetPartnerDTO).profile.legalAddress && (
                      <div className='flex items-center gap-3 p-3 bg-gray-50 rounded-lg'>
                        <MapPin className='h-4 w-4 text-gray-500' />
                        <div>
                          <p className='text-sm text-gray-500'>–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å</p>
                          <p className='font-medium'>{(selectedCustomer as GetPartnerDTO).profile.legalAddress}</p>
                        </div>
                      </div>
                    )}
                  </div>
                )}

                {/* –ë–∞–ª–ª—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
                {selectedCustomer.role === 'Customer' &&
                  'loyaltyPoints' in selectedCustomer && selectedCustomer.loyaltyPoints !== undefined && (
                    <div className='space-y-4'>
                      <div className='flex items-center gap-3 p-3 bg-yellow-50 rounded-lg'>
                        <div className='w-8 h-8 bg-yellow-100 rounded flex items-center justify-center'>
                          <span className='text-yellow-600'>‚≠ê</span>
                        </div>
                        <div>
                          <p className='text-sm text-gray-500'>–ë–∞–ª–ª—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</p>
                          <p className='font-medium'>{(selectedCustomer as GetCustomerDTO).loyaltyPoints} –±–∞–ª–ª–æ–≤</p>
                          {'phantom' in selectedCustomer && selectedCustomer.phantom && (
                            <p className='text-xs text-orange-500'>–í—Ä–µ–º–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç</p>
                          )}
                        </div>
                      </div>
                    </div>
                  )}

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className='space-y-4'>
                  <div className='flex items-center justify-between'>
                    <h4 className='font-medium text-gray-900'>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                    <button
                      onClick={(e) => handleViewUserProfile(selectedCustomer, e)}
                      className="p-1 rounded-full hover:bg-gray-100 transition-colors"
                      title="–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ"
                    >
                      <ExternalLink className="h-4 w-4 text-gray-500 hover:text-blue-500" />
                    </button>
                  </div>
                  <div className='flex items-center gap-3 p-3 bg-gray-50 rounded-lg'>
                    <Phone className='h-4 w-4 text-gray-500' />
                    <div>
                      <p className='text-sm text-gray-500'>–¢–µ–ª–µ—Ñ–æ–Ω</p>
                      <p className='font-medium'>
                        {selectedCustomer.phoneNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                      </p>
                    </div>
                  </div>

                  <div className='flex items-center gap-3 p-3 bg-gray-50 rounded-lg'>
                    <Mail className='h-4 w-4 text-gray-500' />
                    <div>
                      <p className='text-sm text-gray-500'>Email</p>
                      <p className='font-medium'>{selectedCustomer.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                    </div>
                  </div>

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ */}
                  {selectedCustomer.role === 'Partner' && 'profile' in selectedCustomer && selectedCustomer.profile && (
                    <>
                      {(selectedCustomer as GetPartnerDTO).profile.contactPhone && (
                        <div className='flex items-center gap-3 p-3 bg-blue-50 rounded-lg'>
                          <Phone className='h-4 w-4 text-blue-500' />
                          <div>
                            <p className='text-sm text-blue-600'>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω</p>
                            <p className='font-medium'>{(selectedCustomer as GetPartnerDTO).profile.contactPhone}</p>
                          </div>
                        </div>
                      )}
                      {(selectedCustomer as GetPartnerDTO).profile.contactEmail && (
                        <div className='flex items-center gap-3 p-3 bg-blue-50 rounded-lg'>
                          <Mail className='h-4 w-4 text-blue-500' />
                          <div>
                            <p className='text-sm text-blue-600'>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π email</p>
                            <p className='font-medium'>{(selectedCustomer as GetPartnerDTO).profile.contactEmail}</p>
                          </div>
                        </div>
                      )}
                      {(selectedCustomer as GetPartnerDTO).profile.website && (
                        <div className='flex items-center gap-3 p-3 bg-blue-50 rounded-lg'>
                          <div className='w-4 h-4 text-blue-500'>üåê</div>
                          <div>
                            <p className='text-sm text-blue-600'>–í–µ–±-—Å–∞–π—Ç</p>
                            <p className='font-medium'>{(selectedCustomer as GetPartnerDTO).profile.website}</p>
                          </div>
                        </div>
                      )}
                    </>
                  )}
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ */}
                <Button
                  onClick={() => fillFromCustomer(selectedCustomer.id)}
                  className='w-full'
                  disabled={
                    passengers.some(p => p.email === selectedCustomer.email) ||
                    !canAddMorePassengers
                  }
                >
                  <Plus className='h-4 w-4 mr-2' />
                  {passengers.some(p => p.email === selectedCustomer.email)
                    ? '–£–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä'
                    : !canAddMorePassengers
                    ? `–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç (${maxPassengers} –º–µ—Å—Ç)`
                    : '–î–æ–±–∞–≤–∏—Ç—å –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä–∞'}
                </Button>
              </div>
            ) : (
              <div className='text-center py-12'>
                <User className='h-16 w-16 text-gray-300 mx-auto mb-4' />
                <h3 className='text-lg font-medium text-gray-900 mb-2'>
                  {userRole === 'partner' ? '–î–æ–±–∞–≤—å—Ç–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤' : '–ö–ª–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω'}
                </h3>
                <p className='text-gray-500'>
                  {userRole === 'partner'
                    ? '–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Å—Å–∞–∂–∏—Ä–∞" —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞'
                    : '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ø—Ä–∞–≤–∞'
                  }
                </p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–æ–∏—Å–∫ (—Å–∫—Ä—ã—Ç–∞ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤) */}
      {userRole !== 'partner' && (
        <div className='w-full lg:flex-1 flex-shrink-0 flex flex-col'>
        <Card className='flex-1 flex flex-col'>
          <CardHeader className='gap-2'>
            <CardTitle className='flex items-center gap-2'>
              <Users className='h-5 w-5' />
              –í—ã–±–æ—Ä –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
            </CardTitle>
            <p className='text-sm text-muted-foreground'>–ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç—ã –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã</p>
            {/* –ü–æ–∏—Å–∫ */}
            <div className='relative'>
              <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400' />
              <Input
                placeholder='–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É...'
                value={searchQuery}
                onChange={e => setSearchQuery(e.target.value)}
                className='pl-10 pr-10'
              />
              {isSearching && (
                <div className='absolute right-3 top-1/2 transform -translate-y-1/2'>
                  <div className='animate-spin h-4 w-4 border-2 border-primary border-t-transparent rounded-full' />
                </div>
              )}
            </div>
          </CardHeader>
          <CardContent className='flex-1 overflow-hidden p-0'>
            <div className='space-y-3 h-full overflow-y-auto p-4'>
              {filteredUsers.length > 0 ? (
                filteredUsers.map(user => (
                  <div
                    key={user.id}
                    onClick={() => setSelectedCustomer(user)}
                    className={`p-4 border rounded-lg cursor-pointer transition-all hover:shadow-md ${
                      selectedCustomer?.id === user.id
                        ? 'border-blue-500 bg-blue-50'
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <div className='flex items-center gap-3'>
                      <div className='w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center'>
                        <User className='h-5 w-5 text-gray-600' />
                      </div>
                      <div className='flex-1'>
                        <div className='flex justify-between items-center gap-2 mb-1'>
                          <h4 className='font-medium text-gray-900'>
                            {user.fullName}
                          </h4>
                          <Badge
                            variant={user.role === 'Partner' ? 'default' : 'secondary'}
                            className='text-xs'
                          >
                            {user.role === 'Partner' ? '–ö–æ–Ω—Ç—Ä-–∞–≥–µ–Ω—Ç' : '–ö–ª–∏–µ–Ω—Ç'}
                          </Badge>
                        </div>

                        {/* –î–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ */}
                        {user.role === 'Partner' && 'profile' in user && user.profile && (
                          <div className='text-sm text-gray-600 mb-2'>
                            <div className='font-medium'>{(user as GetPartnerDTO).profile.companyName}</div>
                            <div className='text-xs text-gray-500'>
                              {(user as GetPartnerDTO).profile.companyType} ‚Ä¢ {(user as GetPartnerDTO).profile.legalAddress}
                            </div>
                          </div>
                        )}

                        {/* –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–ª–ª—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ */}
                        {user.role === 'Customer' && 'loyaltyPoints' in user && user.loyaltyPoints !== undefined && (
                          <div className='text-sm text-gray-600 mb-2'>
                            <span className='inline-flex items-center gap-1'>
                              ‚≠ê {(user as GetCustomerDTO).loyaltyPoints} –±–∞–ª–ª–æ–≤ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
                              {'phantom' in user && user.phantom && (
                                <span className='text-xs text-orange-500'>(–í—Ä–µ–º–µ–Ω–Ω—ã–π)</span>
                              )}
                            </span>
                          </div>
                        )}

                        <div className='flex justify-between items-center gap-4 text-sm text-gray-500'>
                          {user.email && (
                            <span className='flex items-center gap-1'>
                              <Mail className='h-3 w-3' />
                              {user.email}
                            </span>
                          )}
                          {user.phoneNumber && (
                            <span className='flex items-center gap-1'>
                              <Phone className='h-3 w-3' />
                              {user.phoneNumber}
                            </span>
                          )}
                          {/* –î–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è */}
                          {user.role === 'Partner' && 'profile' in user && user.profile?.contactPhone && (
                            <span className='flex items-center gap-1'>
                              <Phone className='h-3 w-3' />
                              {(user as GetPartnerDTO).profile.contactPhone}
                            </span>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <div className='text-center py-8 text-gray-500'>
                  <Search className='h-12 w-12 mx-auto mb-3 opacity-50' />
                  <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                  <p className='text-sm'>
                    {searchQuery
                      ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
                      : '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'}
                  </p>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
        </div>
      )}

      {/* –¢—Ä–µ—Ç—å—è –∫–æ–ª–æ–Ω–∫–∞ - –°–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ */}
      <div className='w-full lg:flex-1 flex-shrink-0'>
        <Card className='h-full'>
          <CardHeader>
            <CardTitle className='flex items-center justify-between'>
              <div className='flex items-center gap-2'>
                <Users className='h-5 w-5' />
                –ü–∞—Å—Å–∞–∂–∏—Ä—ã ({passengers.length}/{maxPassengers})
              </div>
              <Button
                variant='outline'
                size='sm'
                onClick={addPassenger}
                disabled={!canAddMorePassengers}
                className='flex items-center gap-1'
                title={!canAddMorePassengers ? `–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –¥–ª—è ${selectedTariff?.carType ? getCarTypeLabel(selectedTariff.carType) : '–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è'}` : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞'}
              >
                <Plus className='h-4 w-4' />
                –°–æ–∑–¥–∞—Ç—å
              </Button>
            </CardTitle>
          </CardHeader>
          <CardContent>
            {passengers.length > 0 ? (
              <div className='space-y-3'>
                {passengers.map(passenger => (
                  <div
                    key={passenger.id}
                    className={`p-4 border rounded-lg ${
                      passenger.isMainPassenger ? 'border-blue-500 bg-blue-50' : 'border-gray-200'
                    }`}
                  >
                    <div className='flex items-center gap-3 mb-3'>
                      <div className='w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center'>
                        <User className='h-5 w-5 text-gray-600' />
                      </div>
                      <div className='flex-1'>
                        {passenger.isFromSystem || passenger.userData ? (
                          // –ü–∞—Å—Å–∞–∂–∏—Ä –∏–∑ —Å–∏—Å—Ç–µ–º—ã - —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä (–ù–ï —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π)
                          <div className='space-y-2'>
                            <h4 className='font-medium text-gray-900'>
                              {passenger.userData?.fullName || `${passenger.firstName} ${passenger.lastName || ''}`.trim()}
                            </h4>
                            <div className='flex flex-col gap-1 text-sm text-gray-500'>
                              <div className='flex items-center gap-1'>
                                <Phone className='h-3 w-3' />
                                <span>{passenger.userData?.phoneNumber || passenger.phone || '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
                              </div>
                              {(passenger.userData?.email || passenger.email) && (
                                <div className='flex items-center gap-1'>
                                  <Mail className='h-3 w-3' />
                                  <span>{passenger.userData?.email || passenger.email}</span>
                                </div>
                              )}
                            </div>
                          </div>
                        ) : (
                          // –ü–∞—Å—Å–∞–∂–∏—Ä —Å–æ–∑–¥–∞–Ω –≤—Ä—É—á–Ω—É—é - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π
                          <div className='space-y-2'>
                            <Input
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                              value={passenger.firstName}
                              onChange={(e) => updatePassenger(passenger.id, 'firstName', e.target.value)}
                              className='font-medium'
                            />
                            <Input
                              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω"
                              value={passenger.phone}
                              onChange={(e) => updatePassenger(passenger.id, 'phone', e.target.value)}
                              className='text-sm'
                            />
                            {passenger.email && (
                              <div className='flex items-center gap-1 text-sm text-gray-500'>
                                <Mail className='h-3 w-3' />
                                <span>{passenger.email}</span>
                              </div>
                            )}
                          </div>
                        )}
                      </div>
                    </div>

                    <div className='flex items-center justify-between'>
                      {passenger.isMainPassenger && (
                        <Badge variant='default'>–û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Å—Å–∞–∂–∏—Ä</Badge>
                      )}
                      {!passenger.isMainPassenger && (
                        <Button
                          variant='outline'
                          size='sm'
                          onClick={() => setMainPassenger(passenger.id)}
                        >
                          –°–¥–µ–ª–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–º
                        </Button>
                      )}
                      <Button
                        variant='outline'
                        size='sm'
                        onClick={() => removePassenger(passenger.id)}
                        className='text-red-600 hover:text-red-700'
                      >
                        <Trash2 className='h-4 w-4' />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className='text-center py-12'>
                <Users className='h-16 w-16 text-gray-300 mx-auto mb-4' />
                <h3 className='text-lg font-medium text-gray-900 mb-2'>–ù–µ—Ç –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤</h3>
                <p className='text-gray-500 mb-4'>
                  –î–æ–±–∞–≤—å—Ç–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏
                </p>
                {selectedTariff && (
                  <div className='mb-4 p-3 bg-blue-50 rounded-lg'>
                    <p className='text-sm text-blue-700 font-medium'>
                      –ú–∞–∫—Å–∏–º—É–º –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: {maxPassengers} ({getCarTypeLabel(selectedTariff.carType)})
                    </p>
                  </div>
                )}
                <div className='space-y-2 text-sm text-gray-400'>
                  <p>‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ &quot;–î–æ–±–∞–≤–∏—Ç—å –∫–∞–∫ –ø–∞—Å—Å–∞–∂–∏—Ä–∞&quot;</p>
                  <p>‚Ä¢ –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞ –∫–Ω–æ–ø–∫–æ–π &quot;–°–æ–∑–¥–∞—Ç—å&quot;</p>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
