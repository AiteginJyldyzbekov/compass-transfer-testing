import { MapPin, Clock } from 'lucide-react';
import { Badge } from '@shared/ui/data-display/badge';
import { Card, CardContent } from '@shared/ui/layout';
import type { LocationDTO } from '@entities/locations/interface';
import { LocationType } from '@entities/locations/enums';

interface LocationViewHeaderProps {
  location: LocationDTO;
}

// –ü–µ—Ä–µ–≤–æ–¥—ã —Ç–∏–ø–æ–≤ –ª–æ–∫–∞—Ü–∏–π
const locationTypeLabels: Record<LocationType, string> = {
  [LocationType.Home]: '–î–æ–º',
  [LocationType.Work]: '–†–∞–±–æ—Ç–∞',
  [LocationType.Airport]: '–ê—ç—Ä–æ–ø–æ—Ä—Ç',
  [LocationType.Hotel]: '–û—Ç–µ–ª—å',
  [LocationType.Restaurant]: '–†–µ—Å—Ç–æ—Ä–∞–Ω',
  [LocationType.Mall]: '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä',
  [LocationType.Hospital]: '–ë–æ–ª—å–Ω–∏—Ü–∞',
  [LocationType.School]: '–®–∫–æ–ª–∞',
  [LocationType.University]: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
  [LocationType.Park]: '–ü–∞—Ä–∫',
  [LocationType.Station]: '–°—Ç–∞–Ω—Ü–∏—è',
  [LocationType.Other]: '–î—Ä—É–≥–æ–µ',
};

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –ª–æ–∫–∞—Ü–∏–π
const locationTypeIcons: Record<LocationType, string> = {
  [LocationType.Home]: 'üè†',
  [LocationType.Work]: 'üè¢',
  [LocationType.Airport]: '‚úàÔ∏è',
  [LocationType.Hotel]: 'üè®',
  [LocationType.Restaurant]: 'üçΩÔ∏è',
  [LocationType.Mall]: 'üõçÔ∏è',
  [LocationType.Hospital]: 'üè•',
  [LocationType.School]: 'üè´',
  [LocationType.University]: 'üéì',
  [LocationType.Park]: 'üå≥',
  [LocationType.Station]: 'üöâ',
  [LocationType.Other]: 'üìç',
};

export function LocationViewHeader({ location }: LocationViewHeaderProps) {
  return (
    <Card>
      <CardContent className='p-6'>
        <div className='flex items-start justify-between'>
          <div className='flex items-start gap-4'>
            {/* –ò–∫–æ–Ω–∫–∞ —Ç–∏–ø–∞ –ª–æ–∫–∞—Ü–∏–∏ */}
            <div className='flex-shrink-0'>
              <div className='w-16 h-16 rounded-full bg-blue-100 flex items-center justify-center text-2xl'>
                {locationTypeIcons[location.type as LocationType] || 'üìç'}
              </div>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className='flex-1 min-w-0'>
              <div className='flex items-center gap-3 mb-2'>
                <h1 className='text-2xl font-bold text-gray-900 truncate'>
                  {location.name}
                </h1>
                <Badge variant={location.isActive ? 'default' : 'secondary'}>
                  {location.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                </Badge>
              </div>

              <div className='flex items-center gap-2 text-gray-600 mb-2'>
                <MapPin className='h-4 w-4 flex-shrink-0' />
                <span className='text-sm'>{location.address}</span>
              </div>

              <div className='flex items-center gap-4 text-sm text-gray-500'>
                <div className='flex items-center gap-1'>
                  <span className='font-medium'>–¢–∏–ø:</span>
                  <span>{locationTypeLabels[location.type as LocationType] || location.type}</span>
                </div>
                <div className='flex items-center gap-1'>
                  <span className='font-medium'>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</span>
                  <span>{location.latitude.toFixed(6)}, {location.longitude.toFixed(6)}</span>
                </div>
              </div>
            </div>
          </div>

          {/* –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å */}
          <div className='flex flex-col gap-2'>
            {location.popular1 && (
              <Badge variant='outline' className='text-xs'>
                –¢–æ–ø —Ç–æ—á–∫–∏
              </Badge>
            )}
            {location.popular2 && (
              <Badge variant='outline' className='text-xs'>
                –°–ø–∏—Å–æ–∫ —Ç–æ–ø —Ç–æ—á–µ–∫
              </Badge>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
