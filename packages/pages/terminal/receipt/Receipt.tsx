'use client';

import type { NextPage } from 'next';
import { useTranslations } from 'next-intl';
import { useEffect, useRef } from 'react';
import { showToast } from '@shared/toast';
import { captureReceiptImage } from '@shared/utils/receiptCapture';
import { useFiscalReceipt } from '@entities/fiscal';
import { useTerminalReceipt } from '@entities/order/context';
import { InfoRow } from '@pages/terminal/receipt/ui';
import CountdownButton from '@pages/terminal/receipt/ui/CountdownButton';

// üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–¨ –°–ü–û–°–û–ë–ê –ü–ï–ß–ê–¢–ò
// true - —Ä–∞—Å—Ç—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å (html2canvas -> printRaster)
// false - –ø–æ—Å—Ç—Ä–æ—á–Ω–∞—è –ø–µ—á–∞—Ç—å (printReceiptLines)
const USE_RASTER_PRINT = true;

export const Receipt: NextPage = () => {
  const t = useTranslations('Receipt');
  const { receiptData, orderData, clearReceiptData } = useTerminalReceipt();
  const { printReceiptLines, printReceiptImage } = useFiscalReceipt();

  const hasAutoSavedRef = useRef(false);
  
  const currentDate = new Date();
  const formattedDate = currentDate.toLocaleDateString('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    year: '2-digit',
  });

  // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      clearReceiptData();
    };
  }, [clearReceiptData]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ–∫–∞ –ø–æ—Å–ª–µ –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  useEffect(() => {
    if (receiptData && orderData && !hasAutoSavedRef.current) {
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è
      const timeoutId = setTimeout(async () => {
        try {
          // –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø–µ—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ–∫–∞
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è
          const receiptElement = document.getElementById('receipt-container');

          if (!receiptElement) {
            showToast.error('–≠–ª–µ–º–µ–Ω—Ç —á–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');

            return;
          }
          
          let success = false;
          
          if (USE_RASTER_PRINT) {
            // üñºÔ∏è –†–ê–°–¢–†–û–í–ê–Ø –ü–ï–ß–ê–¢–¨ - —á–µ—Ä–µ–∑ html2canvas
            console.log('üì∏ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–∞—Å—Ç—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å —á–µ–∫–∞');
            
            // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞
            const receiptBase64 = await captureReceiptImage('receipt-container', 384);
            
            // –ü–µ—á–∞—Ç–∞–µ–º —Ä–∞—Å—Ç—Ä–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            success = await printReceiptImage(receiptBase64);
          } else {
            // üìÑ –ü–û–°–¢–†–û–ß–ù–ê–Ø –ü–ï–ß–ê–¢–¨ - —á–µ—Ä–µ–∑ API —Å—Ç—Ä–æ–∫–∏
            console.log('üìù –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Å—Ç—Ä–æ—á–Ω–∞—è –ø–µ—á–∞—Ç—å —á–µ–∫–∞');
            
            // –ü–µ—á–∞—Ç–∞–µ–º —á–µ–∫ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
            success = await printReceiptLines({
              price: orderData.tariff?.basePrice || orderData.finalPrice || 0,
              route: orderData.locations?.map(loc => loc.name).join(' ‚Üí ') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç',
              paymentMethod: 'CARD',
              orderId: receiptData.data?.orderNumber || '000000',
              driver: {
                fullName: receiptData.data?.driver?.fullName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–æ–¥–∏—Ç–µ–ª—å'
              },
              car: {
                model: receiptData.data?.car?.model || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å',
                licensePlate: receiptData.data?.car?.licensePlate || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä'
              }
            });
          }
          
          if (success) {
            // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–µ—á–∞—Ç—å
            showToast.success('üñ®Ô∏è –ß–µ–∫ –Ω–∞–ø–µ—á–∞—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
          } else {
            showToast.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–µ—á–∞—Ç—å—é —á–µ–∫–∞');
          }
        } catch (_error) {
          // –û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ–∫–∞
          showToast.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —á–µ–∫–∞');
        } finally {
          hasAutoSavedRef.current = true;
        }
      }, 2000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ 2 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞

      return () => clearTimeout(timeoutId);
    }
  }, [receiptData, orderData, printReceiptLines]);

  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ–∫–∞ –∏–ª–∏ –∑–∞–∫–∞–∑–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  if (!receiptData || !orderData) {
    return (
      <div className="flex flex-col items-center justify-center h-64 gap-4">
        <h3 className="text-[32px] text-red-600 font-bold">
          –î–∞–Ω–Ω—ã–µ —á–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </h3>
        <p className="text-[24px] text-gray-600">
          –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
        </p>
        <CountdownButton
          initialSeconds={10}
          targetPath="/"
          buttonText="–ù–∞ –≥–ª–∞–≤–Ω—É—é"
        />
      </div>
    );
  }

  return (
    <div className="flex flex-col gap-[50px]">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h3 className="max-w-[800px] mx-auto text-[30px] text-orange-500 text-center leading-[120%] font-semibold">
      {t('photoInstruction')}
      </h3>
      
      {/* –ß–µ–∫ */}
      <div 
        id="receipt-container" 
        className="max-w-[708px] mx-auto relative"
        style={{
          fontFamily: 'system-ui, -apple-system, sans-serif',
          fontSize: '18px',
          lineHeight: '1.4',
          color: '#000000',
          WebkitFontSmoothing: 'antialiased',
          textRendering: 'optimizeLegibility',
        }}
      >
        <div className="w-full h-[54px] bg-[#0A205747] rounded-[37px] shadow-[0px_9px_6.5px_7px_#0A205747_inset]" />
        <div className="w-[90%] h-[48px] absolute top-[24px] left-[5%] bg-[linear-gradient(0.47deg,#FFFFFF_9.8%,#E1E6F7_91.63%)] rounded-tr-[12px] rounded-tl-[12px]" />

        <div className="w-[90%] mx-auto py-[56px] px-[44px] bg-[#FFFFFF] shadow-xl flex flex-col gap-10">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ–∫–∞ */}
          <div className="flex flex-col items-center gap-[30px]">
            {/* <SuccessIcon /> */}
            <h3 className="text-[50px] text-[#0866FF] text-center leading-[120%] font-semibold">
              {t('transactionSuccess')}
            </h3>
          </div>

          {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
          <span className="flex border-wide-dashed h-[2px]" />

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
          <div className="flex flex-col gap-[26px]">
            <InfoRow
              label={t('status')}
              value={
                <div className="py-[11px] px-[19px] flex items-center justify-center rounded-[42px] bg-[#41D1951F]">
                  <span className="text-[18px] text-[#41D195] leading-[30px] font-medium">
                    {t('active')}
                  </span>
                </div>
              }
            />

            <InfoRow
              label={t('date')}
              value={formattedDate}
            />
            <InfoRow
              label={t('name')}
              value={receiptData.data.driver.fullName}
            />
            <InfoRow
              label={t('car')}
              value={receiptData.data.car.model}
            />
            <InfoRow
              label={t('carNumber')}
              value={receiptData.data.car.licensePlate}
            />
            <InfoRow
              label={t('code')}
              value={(receiptData.id || receiptData.orderId || '000000').split('').reverse().slice(0, 6).join('').toUpperCase()}
            />
          </div>

          {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
          <span className="flex border-wide-dashed h-[2px]" />

          {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ */}
          <div className="flex items-center justify-between">
            <h4 className="text-[30px] text-[#0047FF] leading-[34px] font-medium">
              {t('purchase')}
            </h4>
            <span className="text-[30px] text-[#0047FF] leading-[46px] font-bold">
              {orderData.tariff?.basePrice || orderData.finalPrice}KGS
            </span>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ */}
      <div className="flex justify-center">
        <CountdownButton
          initialSeconds={60}
          targetPath="/"
          buttonText={t('toMain')}
        />
      </div>
    </div>
  );
};

export default Receipt;
