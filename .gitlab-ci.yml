stages:
  - install
  - build
  - deploy

variables:
  NODE_VERSION: '20'

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .yarn/cache/
    - .next/cache/

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ package.json/yarn.lock –∏–ª–∏ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫)
install_dependencies:
  stage: install
  image: node:${NODE_VERSION}-alpine
  script:
    - echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    - echo "Yarn –≤–µ—Ä—Å–∏—è:" && yarn --version
    - yarn install --frozen-lockfile
    - echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
  artifacts:
    paths:
      - node_modules/
    expire_in: 24 hours
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && ($CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME == "develop")
      when: manual
      allow_failure: false
    - if: $CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME == "develop"
      changes:
        - package.json
        - yarn.lock
        - packages/*/package.json
      when: on_success
    - if: $CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME == "develop"
      when: manual
      allow_failure: true

# –°–±–æ—Ä–∫–∞ Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3027)
build_admin:
  stage: build
  image: node:${NODE_VERSION}-alpine
  dependencies:
    - install_dependencies
  before_script:
    - |
      if [ ! -d "node_modules" ]; then
        echo "üì¶ node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        yarn install --frozen-lockfile
      else
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
      fi
  variables:
    APP_VERSION: '1.0.0'
    NODE_ENV: 'production'
    HOSTNAME: 'compass.local'
    PORT: '3027'
    NEXT_PUBLIC_API_URL: 'http://karaoketest.ru/api'
    NEXT_PUBLIC_DOMAIN: '.karaoketest.ru'
    AUTH_COOKIE_NAME: '.AspNetCore.Identity.Application'
    NEXT_PUBLIC_WS_BASE_URL: 'ws://karaoketest.ru/hubs/wshub'
  script:
    - echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3027)"
    - cd apps/compass-admin
    - echo "–°–æ–∑–¥–∞–Ω–∏–µ .env.production —Ñ–∞–π–ª–∞..."
    - |
      cat > .env.production << EOF
      APP_VERSION=$APP_VERSION
      NODE_ENV=$NODE_ENV
      HOSTNAME=$HOSTNAME
      PORT=$PORT
      NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
      NEXT_PUBLIC_DOMAIN=$NEXT_PUBLIC_DOMAIN
      AUTH_COOKIE_NAME=$AUTH_COOKIE_NAME
      NEXT_PUBLIC_WS_BASE_URL=$NEXT_PUBLIC_WS_BASE_URL
      EOF
    - echo "Environment —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:"
    - cat .env.production
    - yarn build
    - echo "‚úÖ Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
  artifacts:
    paths:
      - apps/compass-admin/.next/
      - apps/compass-admin/.env.production
    expire_in: 1 day
  only:
    - main
    - develop

# –°–±–æ—Ä–∫–∞ Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3028)
build_driver:
  stage: build
  image: node:${NODE_VERSION}-alpine
  dependencies:
    - install_dependencies
  before_script:
    - |
      if [ ! -d "node_modules" ]; then
        echo "üì¶ node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        yarn install --frozen-lockfile
      else
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
      fi
  variables:
    APP_VERSION: '1.0.0'
    NODE_ENV: 'production'
    HOSTNAME: 'compass.local'
    PORT: '3028'
    NEXT_PUBLIC_API_URL: 'http://testingkg.su/api'
    NEXT_PUBLIC_DOMAIN: '.testingkg.su'
    AUTH_COOKIE_NAME: '.AspNetCore.Identity.Application'
    NEXT_PUBLIC_WS_BASE_URL: 'ws://testingkg.su/hubs/wshub'
  script:
    - echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3028)"
    - cd apps/compass-driver
    - echo "–°–æ–∑–¥–∞–Ω–∏–µ .env.production —Ñ–∞–π–ª–∞..."
    - |
      cat > .env.production << EOF
      APP_VERSION=$APP_VERSION
      NODE_ENV=$NODE_ENV
      HOSTNAME=$HOSTNAME
      PORT=$PORT
      NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
      NEXT_PUBLIC_DOMAIN=$NEXT_PUBLIC_DOMAIN
      AUTH_COOKIE_NAME=$AUTH_COOKIE_NAME
      NEXT_PUBLIC_WS_BASE_URL=$NEXT_PUBLIC_WS_BASE_URL
      EOF
    - echo "Environment —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:"
    - cat .env.production
    - yarn build
    - echo "‚úÖ Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
  artifacts:
    paths:
      - apps/compass-driver/.next/
      - apps/compass-driver/.env.production
    expire_in: 1 day
  only:
    - main
    - develop

# –°–±–æ—Ä–∫–∞ Terminal –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3029)
build_terminal:
  stage: build
  image: node:${NODE_VERSION}-alpine
  dependencies:
    - install_dependencies
  before_script:
    - |
      if [ ! -d "node_modules" ]; then
        echo "üì¶ node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        yarn install --frozen-lockfile
      else
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
      fi
  variables:
    APP_VERSION: '1.0.0'
    NODE_ENV: 'production'
    HOSTNAME: 'compass.local'
    PORT: '3029'
    NEXT_PUBLIC_API_URL: 'http://daimnemas.su/api'
    NEXT_PUBLIC_DOMAIN: '.daimnemas.su'
    AUTH_COOKIE_NAME: '.AspNetCore.Identity.Application'
    NEXT_PUBLIC_WS_BASE_URL: 'ws://daimnemas.su/hubs/wshub'
  script:
    - echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Terminal –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3029)"
    - cd apps/compass-terminal
    - echo "–°–æ–∑–¥–∞–Ω–∏–µ .env.production —Ñ–∞–π–ª–∞..."
    - |
      cat > .env.production << EOF
      APP_VERSION=$APP_VERSION
      NODE_ENV=$NODE_ENV
      HOSTNAME=$HOSTNAME
      PORT=$PORT
      NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
      NEXT_PUBLIC_DOMAIN=$NEXT_PUBLIC_DOMAIN
      AUTH_COOKIE_NAME=$AUTH_COOKIE_NAME
      NEXT_PUBLIC_WS_BASE_URL=$NEXT_PUBLIC_WS_BASE_URL
      EOF
    - echo "Environment —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω:"
    - cat .env.production
    - yarn build
    - echo "‚úÖ Terminal –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
  artifacts:
    paths:
      - apps/compass-terminal/.next/
      - apps/compass-terminal/.env.production
    expire_in: 1 day
  only:
    - main
    - develop

# –î–µ–ø–ª–æ–π Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
deploy_admin:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build_admin
  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–ª—é—á–∞
    - echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
    - echo "==== SSH KEY BEGIN ===="
    - cat /tmp/ssh_key
    - echo "==== SSH KEY END ===="
    - chmod 600 /tmp/ssh_key
    - ssh-add /tmp/ssh_key
    - rm /tmp/ssh_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "üöÄ –î–µ–ø–ª–æ–π Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3027)"
    - echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..."
    - rsync -avz --delete apps/compass-admin/.next/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/admin/.next/
    - rsync -avz apps/compass-admin/.env.production $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/admin/
    - echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2 –ø—Ä–æ—Ü–µ—Å—Å–∞..."
    - ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH/admin && pm2 restart compass-admin || pm2 start npm --name compass-admin -- start"
    - echo "‚úÖ Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç 3027"
  environment:
    name: production-admin
    url: http://karaoketest.ru
  only:
    - main
  when: manual

# –î–µ–ø–ª–æ–π Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
deploy_driver:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build_driver
  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–ª—é—á–∞
    - echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
    - echo "==== SSH KEY BEGIN ===="
    - cat /tmp/ssh_key
    - echo "==== SSH KEY END ===="
    - chmod 600 /tmp/ssh_key
    - ssh-add /tmp/ssh_key
    - rm /tmp/ssh_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "üöÄ –î–µ–ø–ª–æ–π Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 3028)"
    - echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..."
    - rsync -avz --delete apps/compass-driver/.next/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/driver/.next/
    - rsync -avz apps/compass-driver/.env.production $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/driver/
    - echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2 –ø—Ä–æ—Ü–µ—Å—Å–∞..."
    - ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH/driver && pm2 restart compass-driver || pm2 start npm --name compass-driver -- start"
    - echo "‚úÖ Driver –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç 3028"
  environment:
    name: production-driver
    url: http://testingkg.su
  only:
    - main
  when: manual

# –î–µ–ø–ª–æ–π Terminal –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
deploy_terminal:
  stage: deploy
  image: alpine:latest
  dependencies: [build_terminal]

  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–ª—é—á–∞
    - echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
    - echo "==== SSH KEY BEGIN ===="
    - cat /tmp/ssh_key
    - echo "==== SSH KEY END ===="
    - chmod 600 /tmp/ssh_key
    - ssh-add /tmp/ssh_key
    - rm /tmp/ssh_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "üöÄ –î–µ–ø–ª–æ–π Terminal (3029)"
    - echo $DEPLOY_USER
    - echo $DEPLOY_HOST
    - echo $DEPLOY_PATH
    # 1. —Å–æ–∑–¥–∞—ë–º –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    - ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes "$DEPLOY_USER@$DEPLOY_HOST" "mkdir -p $DEPLOY_PATH/terminal/.next"
    # 2. —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    - rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes" \
      apps/compass-terminal/.next/ "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/terminal/.next/"
    - rsync -avz -e "ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes" \
      apps/compass-terminal/.env.production "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/terminal/"
    # 3. –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2
    - ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes "$DEPLOY_USER@$DEPLOY_HOST" \
      "cd $DEPLOY_PATH/terminal && pm2 restart compass-terminal || pm2 start npm --name compass-terminal -- start"
    - echo "‚úÖ Terminal –∑–∞–¥–µ–ø–ª–æ–µ–Ω"

# –î–µ–ø–ª–æ–π –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
deploy_all:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build_admin
    - build_driver
    - build_terminal
  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–ª—é—á–∞
    - echo "$SSH_PRIVATE_KEY" > /tmp/ssh_key
    - echo "==== SSH KEY BEGIN ===="
    - cat /tmp/ssh_key
    - echo "==== SSH KEY END ===="
    - chmod 600 /tmp/ssh_key
    - ssh-add /tmp/ssh_key
    - rm /tmp/ssh_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "üöÄ –î–µ–ø–ª–æ–π –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Compass 2.0"
    - echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Admin..."
    - rsync -avz --delete apps/compass-admin/.next/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/admin/.next/
    - rsync -avz apps/compass-admin/.env.production $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/admin/
    - echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Driver..."
    - rsync -avz --delete apps/compass-driver/.next/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/driver/.next/
    - rsync -avz apps/compass-driver/.env.production $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/driver/
    - echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Terminal..."
    - rsync -avz --delete apps/compass-terminal/.next/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/terminal/.next/
    - rsync -avz apps/compass-terminal/.env.production $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/terminal/
    - echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    - ssh $DEPLOY_USER@$DEPLOY_HOST "pm2 restart compass-admin compass-driver compass-terminal || echo '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'"
    - echo "‚úÖ –í—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–¥–µ–ø–ª–æ–µ–Ω—ã"
  environment:
    name: production-all
  only:
    - main
  when: manual

# –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ (—Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫)
cleanup_cache:
  stage: deploy
  image: alpine:latest
  script:
    - echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ CI/CD"
    - rm -rf node_modules/ .yarn-cache/ .next/cache/
    - echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω"
  when: manual
  only:
    - main
